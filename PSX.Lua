--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.4) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v68=0;local v69;while true do if (v68==0) then v69=v2(v0(v20,16));if v19 then local v84=0;local v85;while true do if (0==v84) then v85=v5(v69,v19);v19=nil;v84=1;end if (1==v84) then return v85;end end else return v69;end break;end end end end);local function v21(v22,v23,v24)if v24 then local v70=(v22/((2 + 0)^(v23-(1 -(0 -0)))))%(((3 + 0) -1)^(((v24-(607 -(66 + 236 + (445 -(116 + 25))))) -(v23-(276 -(55 + 220)))) + (2 -1)));return v70-(v70%(1 -0));else local v71=(2 -0)^(v23-1);return (((v22%(v71 + v71))>=v71) and 1) or (540 -(367 + 173));end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1;return v38;end local function v26()local v39,v40=v1(v16,v18,v18 + (1687 -(627 + 1058)));v18=v18 + 2;return (v40 * (892 -636)) + v39;end local function v27()local v41=0;local v42;local v43;local v44;local v45;while true do if (v41==(0 + (449 -(220 + 229)))) then v42,v43,v44,v45=v1(v16,v18,v18 + 1 + 2);v18=v18 + (10 -6);v41=1 + 0;end if (v41==(1 + 0)) then return (v45 * (16778689 -(126 + 340 + 1007))) + (v44 * 65536) + (v43 * (623 -367)) + v42;end end end local function v28()local v46=v27();local v47=v27();local v48=1 -(0 -0);local v49=(v21(v47,1141 -(778 + 362),716 -(240 + 456)) * ((4 -2)^(19 + 13))) + v46;local v50=v21(v47,29 -8,903 -(239 + 633));local v51=((v21(v47,66 -(536 -(32 + 470)))==(1 + 0 + 0)) and  -(83 -(19 + 63))) or 1;if (v50==(0 + 0)) then if (v49==0) then return v51 * (0 -0);else v50=416 -((694 -404) + 125);v48=0;end elseif (v50==(3270 -(688 + 535))) then return ((v49==0) and (v51 * ((1 + 0)/(0 -0)))) or (v51 * NaN);end return v8(v51,v50-(6 + 1017)) * (v48 + (v49/((1076 -(1067 + 7))^52)));end local function v29(v30)local v52=0 + 0;local v53;local v54;while true do if (v52==((11 -3) -5)) then return v6(v54);end if (v52==(0 -0)) then v53=nil;if  not v30 then v30=v27();if (v30==(0 -0)) then return "";end end v52=928 -(600 + 327);end if (v52==((3749 -1981) -(1327 + 439))) then v54={};for v75=1 + 0, #v53 do v54[v75]=v2(v1(v3(v53,v75,v75)));end v52=517 -(293 + 221);end if (v52==(1 + 0)) then v53=v3(v16,v18,(v18 + v30) -(331 -(206 + 124)));v18=v18 + v30;v52=2 + 0 + 0;end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (v55==(385 -(88 + 294))) then v62=nil;v63=nil;v55=4;end if (v55==(0 + 0)) then v56=589 -(469 + 120);v57=nil;v55=1;end if (v55~=(3 -1)) then else v60=nil;v61=nil;v55=2 + 1;end if (v55~=(1 + 0)) then else v58=nil;v59=nil;v55=2 + 0;end if (v55~=(10 -6)) then else while true do if (v56~=(996 -(81 + 914))) then else v59=nil;v60=nil;v56=1 + 1;end if (v56~=2) then else v61=nil;v62=nil;v56=2 + 1;end if (v56~=(1 + 2)) then else v63=nil;while true do if (v57==(2 -1)) then local v96=929 -(16 + 913);while true do if (v96==(3 -2)) then v63={};v57=5 -3;break;end if (v96~=(1243 -(811 + 432))) then else v61={v58,v59,nil,v60};v62=v27();v96=1;end end end if (v57==(3 -0)) then for v104=1 + 0,v27() do v59[v104-(1369 -(982 + 386))]=v33();end for v106=1,v27() do v60[v106]=v27();end return v61;end if (v57==(3 -1)) then local v97=0 -0;local v98;while true do if (v97==(870 -(541 + 329))) then v98=0 -0;while true do if (v98~=(0 + 0)) then else local v112=0;while true do if (v112~=(1383 -(442 + 940))) then else v98=1 -0;break;end if (v112~=(435 -(207 + 228))) then else for v121=322 -(170 + 151),v62 do local v122=0;local v123;local v124;local v125;while true do if (1==v122) then v125=nil;while true do if (v123~=(916 -(583 + 332))) then else if (v124==(1360 -(1336 + 23))) then v125=v25()~=0;elseif (v124==2) then v125=v28();elseif (v124==3) then v125=v29();end v63[v121]=v125;break;end if (v123==0) then v124=v25();v125=nil;v123=3 -2;end end break;end if (v122~=(1300 -(561 + 739))) then else v123=0;v124=nil;v122=1 + 0;end end end v61[3]=v25();v112=1;end end end if (v98~=(1 + 0)) then else for v115=1,v27() do local v116=0;local v117;local v118;local v119;while true do if (v116~=(0 + 0)) then else v117=0;v118=nil;v116=1;end if (v116~=(1 + 0)) then else v119=nil;while true do if (v117==(0 -0)) then local v127=0 -0;while true do if ((3 -2)~=v127) then else v117=1;break;end if (v127~=(0 + 0)) then else v118=0;v119=nil;v127=679 -(194 + 484);end end end if (v117==1) then while true do if (v118==(0 + 0)) then v119=v25();if (v21(v119,1,1 + 0)==0) then local v180=0 -0;local v181;local v182;local v183;local v184;while true do if (v180==1) then local v191=0 + 0;while true do if (v191==(1194 -(429 + 764))) then v180=2;break;end if (v191~=(403 -(86 + 317))) then else v183=nil;v184=nil;v191=1;end end end if (v180==(2 + 0)) then while true do if (v181~=2) then else local v202=1328 -(999 + 329);while true do if (v202==1) then v181=3;break;end if (v202==0) then if (v21(v183,3 -2,1)~=1) then else v184[2]=v63[v184[2]];end if (v21(v183,28 -(19 + 7),2)==(977 -(63 + 913))) then v184[12 -9]=v63[v184[3]];end v202=1;end end end if (v181==3) then if (v21(v183,4 -1,1303 -(552 + 748))~=(1 + 0)) then else v184[4]=v63[v184[1233 -(185 + 1044)]];end v58[v115]=v184;break;end if (v181==(1 -0)) then local v204=0;while true do if (v204==1) then v181=768 -(185 + 581);break;end if ((0 + 0)~=v204) then else local v212=381 -(265 + 116);while true do if (v212==(1642 -(242 + 1399))) then v204=1 -0;break;end if (v212~=(484 -(382 + 102))) then else v184={v26(),v26(),nil,nil};if (v182==0) then local v218=0 -0;local v219;local v220;local v221;while true do if (v218~=(0 + 0)) then else v219=157 -(56 + 101);v220=nil;v218=1;end if (v218~=1) then else v221=nil;while true do if (v219~=1) then else while true do if (0~=v220) then else v221=0;while true do if (v221==(911 -(210 + 701))) then v184[2 + 1]=v26();v184[10 -6]=v26();break;end end break;end end break;end if (v219~=(1954 -(672 + 1282))) then else local v224=0 -0;while true do if (v224~=0) then else v220=326 -(202 + 124);v221=nil;v224=1 + 0;end if (v224~=1) then else v219=1 + 0;break;end end end end break;end end elseif (v182==(1616 -(1125 + 490))) then v184[5 -2]=v27();elseif (v182==2) then v184[3]=v27() -((830 -(253 + 575))^(36 -(9 + 11)));elseif (v182~=3) then else local v225=706 -(77 + 629);local v226;while true do if (v225~=(0 + 0)) then else v226=1201 -(388 + 813);while true do if (v226==(0 + 0)) then v184[3]=v27() -(2^16);v184[4]=v26();break;end end break;end end end v212=1;end end end end end if (v181==0) then local v205=0 + 0;local v206;while true do if (v205~=(0 + 0)) then else v206=0;while true do if (v206==0) then local v217=0;while true do if (v217==(2 -1)) then v206=343 -(304 + 38);break;end if (v217~=(0 + 0)) then else v182=v21(v119,2 -0,6 -3);v183=v21(v119,4,487 -(402 + 79));v217=1789 -(1114 + 674);end end end if (v206~=1) then else v181=1167 -(135 + 1031);break;end end break;end end end end break;end if (v180==(0 -0)) then local v192=0;while true do if (v192~=0) then else v181=284 -(177 + 107);v182=nil;v192=1 + 0;end if (v192==1) then v180=1;break;end end end end end break;end end break;end end break;end end end v57=3;break;end end break;end end end if (v57~=0) then else local v99=0 + 0;while true do if (v99==(1373 -(1215 + 157))) then v60={};v57=1;break;end if (0==v99) then v58={};v59={};v99=1202 -(107 + 1094);end end end end break;end if (v56==0) then local v83=0 + 0;while true do if (v83~=0) then else v57=844 -(139 + 705);v58=nil;v83=2 -1;end if (v83~=1) then else v56=1 + 0;break;end end end end break;end end end local function v34(v35,v36,v37)local v64=0;local v65;local v66;local v67;while true do if (v64==0) then v65=v35[1];v66=v35[2];v64=1;end if (v64==1) then v67=v35[3];return function(...)local v77=0;local v78;local v79;local v80;local v81;local v82;while true do if (v77==1) then v80={...};v81=v12("#",...) -1;v77=2;end if (v77==0) then v78=1;v79= -1;v77=1;end if (v77==3) then A,B=v32(v11(v82));if  not A[1] then local v100=v35[4][v78] or "?";error("Script error at ["   .. v100   .. "]:"   .. A[2]);else return v13(A,2,B);end break;end if (v77==2) then v82=nil;v82=function()local v86=v65;local v87=v66;local v88=v67;local v89=v32;local v90={};local v91={};local v92={};for v101=0 -0,v81 do if ((((17127 -(486 + 27)) -11645)>(901 -(320 + 191))) and (v101>=v88)) then v90[v101-v88]=v80[v101 + (1 -0)];else v92[v101]=v80[v101 + 1 + (0 -0)];end end local v93=(v81-v88) + 1;local v94;local v95;while true do local v102=183 -(56 + 127);local v103;while true do if (((4281 -998)>=(3563 -2136)) and (v102==0)) then v103=(0 -0) + 0;while true do if ((3023==3023) and (v103==1)) then if (((65 + 517)>((170 + 97) -115)) and (v95<=(5 + 5))) then if ((v95<=4) or ((563 + 3351)<=(3024 -(107 + 12)))) then if ((v95<=(2 -1)) or ((7186 -3792)<(1289 + 1605))) then if ((v95>(1698 -(714 + 984))) or (2039<=(2603 -1268))) then local v128=0;local v129;while true do if ((v128==(0 + 0)) or ((881 -504)>((6092 -(375 + 1442)) -(272 + 916)))) then v129=v94[1658 -(868 + 711 + 77)];v92[v129]=v92[v129](v92[v129 + (1 -0)]);break;end end else v92[v94[2]][v94[7 -4]]=v94[(228 -(141 + 85)) + 2];end elseif (((1919 + 1508)>=(1102 -(245 + (392 -(123 + 80))))) and (v95<=(1288 -(1080 + 206)))) then v78=v94[2 + 1];elseif ((v95>(3 + (602 -(298 + 304)))) or ((9794 -6000)<=3631)) then if ((v92[v94[2 + 0]]==v94[4]) or ((2943 -(21 + 108))>=((5327 + 572) -2256))) then v78=v78 + (981 -(728 + 220 + 32));else v78=v94[3];end else local v145=0;local v146;local v147;while true do if ((v145==(3 -2)) or ((8797 -3912)<=43)) then while true do if ((1971<=(13929 -9312)) and (v146==(1867 -(556 + 1311)))) then v147=v94[2];v92[v147](v92[v147 + (51 -(14 + 36))]);break;end end break;end if ((v145==(0 -(0 + 0))) or (3968>(9140 -4790))) then v146=861 -(10 + 851);v147=nil;v145=1 + 0;end end end elseif ((v95<=(13 -6)) or (1788>(2858 + 1240))) then if (((1 + 1)==(647 -((1389 -1004) + 260))) and (v95<=(3 + 2))) then if ((v94[2 + 0]==v92[v94[4]]) or (1545>(4543 -(134 + 589)))) then v78=v78 + (616 -(266 + 349));else v78=v94[251 -(243 + 5)];end elseif (((2146 -(534 + 287))<=(3102 -(147 + 134))) and (v95>(2 + 4))) then v92[v94[2 + 0]][v94[3]]=v92[v94[1 + 3]];else local v151=0;local v152;local v153;local v154;while true do if ((v151==0) or ((704 -(479 + 58 + 53))>=(1396 + 3283))) then v152=485 -(211 + 274);v153=nil;v151=1 -0;end if (((1513 -((246 -183) + 252))==(1695 -497)) and (v151==((1233 -(422 + 28)) -(478 + 304)))) then v154=nil;while true do if ((v152==(24 -(9 + 15))) or ((1679 + 787)>(5216 -(472 + 298)))) then v153=0 -0;v154=nil;v152=1682 -(1234 + 304 + 143);end if (((4658 -3450)<4326) and (v152==1)) then while true do if (((3278 -2277)<((5845 -(508 + 337)) -(1549 + 265))) and (v153==0)) then v154=v94[(2455 -1588) -(861 + 4)];v92[v154](v13(v92,v154 + ((2651 -2034) -(309 + 307)),v94[3]));break;end end break;end end break;end end end elseif (((5453 -(54 + 604))>=(4101 -(153 + 413))) and (v95<=8)) then v92[v94[1286 -(192 + 1092)]]=v37[v94[512 -(198 + 311)]];elseif ((v95>(1290 -(839 + 442))) or ((7084 -(3338 + 616))<=(1479 -(564 + 440)))) then v92[v94[2]]={};else local v156=0;local v157;local v158;local v159;while true do if ((2545==(1863 + 682)) and (v156==(672 -(497 + 174)))) then v159=nil;while true do if ((v157==(2 -1)) or (1603>(4561 -(107 + 68 + 347)))) then v92[v158 + 1]=v159;v92[v158]=v159[v94[127 -(24 + 99)]];break;end if ((2435<(5454 -(1592 + (772 -(136 + 548))))) and (v157==(1161 -(929 + 201 + 31)))) then v158=v94[(132 + 1196) -(1277 + 49)];v159=v92[v94[1903 -(58 + 1842)]];v157=1391 -(405 + 985);end end break;end if ((v156==((0 -0) + 0)) or (2393>=(7639 -4094))) then v157=0 -0;v158=nil;v156=1486 -(271 + 1214);end end end elseif ((v95<=(42 -(19 + 8))) or ((12611 -8796)<(4211 -(1016 + 716)))) then if (((825 + (701 -(307 + 96)))==(2259 -(217 + 919))) and (v95<=12)) then if ((v95>(14 -3)) or ((6229 -3890)>=(4767 -(119 + 6 + 62)))) then v92[v94[4 -2]]=v92[v94[7 -4]];else v92[v94[2 + 0]]=v34(v87[v94[1446 -((831 -(126 + 120)) + 858)]],nil,v37);end elseif ((v95<=13) or (((12534 -9218) -(160 + 206))==(723 + 595))) then local v138=(1272 -(676 + 596)) + 0;local v139;while true do if ((v138==(1054 -(264 + 790))) or ((3609 -2143)<=(2571 -(593 + (2601 -(1401 + 4)))))) then v139=v94[7 -5];v92[v139]=v92[v139](v13(v92,v139 + 1,v79));break;end end elseif (((1100 + 2642)==(8497 -4755)) and (v95==(33 -19))) then local v160=0;local v161;local v162;local v163;local v164;while true do if (((6225 -(408 + 864))==(5854 -(102 + 799))) and (v160==(1 + 0))) then local v186=0 + 0;while true do if (((3431 -(776 + 23))<=(5238 -(746 + (2192 -(1208 + 76))))) and (v186==1)) then v160=2;break;end if (((2508 + 1735)<=((3173 -2205) + 3979)) and ((0 + 0)==v186)) then v79=(v163 + v161) -(1 + 0);v164=(2720 -(491 + 391)) -(106 + 1732);v186=1 + 0;end end end if (((5360 -(810 + 1101))<4144) and (v160==0)) then local v187=0 + 0;while true do if (((4153 -(147 + 670))>=(4957 -3208)) and (v187==(449 -(185 + 264)))) then v161=v94[(2 + 0) -0];v162,v163=v89(v92[v161](v13(v92,v161 + (656 -(62 + 593)),v94[3])));v187=1322 -(972 + 349);end if ((1842==(913 + (2690 -(201 + 1560)))) and (v187==(1871 -(959 + 911)))) then v160=1;break;end end end if ((v160==2) or ((5700 -(1207 + 84))<=(767 -528))) then for v188=v161,v79 do local v189=779 -(724 + 55);local v190;while true do if (((1647 -(102 + 46))==(175 + 1324)) and (v189==(0 + 0))) then v190=0 -(0 -0);while true do if (((1072 -(2197 -1518))>=(1308 -(257 + 760))) and (v190==(0 + 0))) then v164=v164 + (1599 -(1519 + 79));v92[v188]=v162[v164];break;end end break;end end end break;end end else v92[v94[2 + 0]]();end elseif ((v95<=(29 -11)) or ((5767 -4145)>=(6883 -(4276 -2243)))) then if (((6325 -(4996 -(1215 + 566)))>((7714 -(1731 + 173)) -4112)) and (v95<=(26 -10))) then local v140=(1748 -(548 + 1200)) + 0;local v141;while true do if (((3209 -((4212 -2932) + 361))<(3341 -(887 + 144))) and (v140==(0 -0))) then v141=v94[1 + 1];v92[v141]=v92[v141]();break;end end elseif ((v95==(32 -15)) or ((8162 -4431)<((424 -(193 + 124)) + 400))) then for v178=v94[896 -(773 + (448 -327))],v94[1995 -(1729 + 263)] do v92[v178]=nil;end else v92[v94[2]]=v92[v94[3]][v94[2 + 2]];end elseif ((v95<=(9 + 10)) or (1828>(1878 + 353))) then do return;end elseif ((v95==((81 + 321) -(46 + 336))) or ((86 + 957)>=(4023 -703))) then v92[v94[(4 + 0) -(1437 -(573 + 862))]]=v94[13 -10];else local v169=(0 -0) + 0;local v170;local v171;while true do if (((2921 -(398 + 241))>(4805 -2647)) and (v169==1)) then while true do if ((v170==(0 + 0)) or (1203>=(2706 -(182 + 234)))) then v171=v94[8 -6];v92[v171]=v92[v171](v13(v92,v171 + 1 + 0,v94[13 -10]));break;end end break;end if ((v169==(716 -(488 + 228))) or (((23132 -10096) -8262)<=(2043 -(810 + 706)))) then v170=0;v171=nil;v169=1;end end end v78=v78 + (869 -((1118 -559) + 309));break;end if ((v103==0) or ((5264 -3890)>=(5167 -(445 + 1442)))) then local v113=0 -0;local v114;while true do if (((1944 + 1007)<3718) and (v113==(1150 -(65 + 1085)))) then v114=(0 -0) -0;while true do if ((v114==(0 + 0)) or ((2487 -1546)==(1000 -514))) then local v126=(0 -0) + 0;while true do if ((v126==0) or ((2063 -(429 + 262))==(596 + 3591))) then v94=v86[v78];v95=v94[1 -0];v126=1 + (355 -(49 + 306));end if (((2416 + (7192 -5121))>=(1728 + 206)) and (v126==(1 + 0))) then v114=1 + 0;break;end end end if ((v114==(1 -0)) or ((3302 -(57 + 203))<=((5188 -4076) -(83 + 471)))) then v103=2 -1;break;end end break;end end end end break;end end end end;v77=3;end end end;end end end return v34(v33(),{},v17)(...);end vv9(),...);end
